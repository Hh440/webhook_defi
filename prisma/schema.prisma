// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Block {
  id          Int          @id @default(autoincrement())
  baseFeePerGas      String?
  //blobGasUsed        String
  difficulty         String?
  //  excessBlobGas      String
  extraData          String?
  gasLimit           String?
  gasUsed            String?
  hash               String?
  logsBloom          String?
  miner              String?
  mixHash            String?
  nonce              String?
  number             String?
  //  parentBeaconBlockRoot String
  parentHash         String?
  receiptsRoot       String?
  sha3Uncles         String?
  size               String?
  stateRoot          String?
  timestamp          String?
  totalDifficulty    String?
  transactions       Transaction[]
  transactionRoot     String?
  uncles               String[]
  withdrawals          Withdrawals[]
  withdrawalsRoot      String?
 
  
}



model Transaction {
  id                   Int           @id @default(autoincrement())
  blockHash           String?
  block_number         String?
  from                String?
  gas                 String?
  gasPrice            String?
  hash                String?
  input               String?
  //maxFeePerGas       String
  //maxPriorityFeePerGas String
  nonce               String?
  to                  String?
  transactionIndex    String?
  value               String?
  type                String?
  accessList          AccessList[]
  chainId             String?
  v                    String?
  r                    String?
  yParity              String?
  block            Block @relation(fields: [id], references: [id])
  
}


model AccessList{
  id           Int                  @id @default(autoincrement())
  address      String?
  storageKeys   String[]
  accessId       Int
  transaction   Transaction   @relation(fields: [accessId], references: [id]) 
}


model Withdrawals{
  id                Int             @id @default(autoincrement())
  index             String?
  validatorIndex    String?
  address           String?
  amount            String?
  withdrawalId       Int
  block             Block        @relation(fields: [withdrawalId], references: [id])


}